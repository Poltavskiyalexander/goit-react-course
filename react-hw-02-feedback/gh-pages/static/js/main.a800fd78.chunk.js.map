{"version":3,"sources":["components/Statistics.jsx","components/FeedbackOptions.jsx","components/Section.jsx","components/Notification.jsx","App.js","index.js","components/FeedbackOptions.module.css","components/Section.module.css","components/Statistics.module.css","components/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","style","block_btn","FeedbackOptions","addFeedback","btn","onClick","Section","title","children","section","defaultProps","Notification","message","App","state","event","click","target","textContent","setState","prevState","newState","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2NAwCeA,EApCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAWC,IAAMC,UAAtB,UACE,wCAEE,+BAAOP,OAET,2CAEE,+BAAOC,OAET,uCAEE,+BAAOC,OAET,0CACS,+BAAOC,SAGbA,GACD,qDAEE,iCAAOC,EAAP,e,gBCJKI,EAnBS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzB,OACE,qCACE,wBAAQJ,UAAWC,IAAMI,IAAKC,QAASF,EAAvC,kBAGA,wBAAQJ,UAAWC,IAAMI,IAAKC,QAASF,EAAvC,qBAGA,wBAAQJ,UAAWC,IAAMI,IAAKC,QAASF,EAAvC,qB,gBCRAG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAST,UAAWC,IAAMS,QAA1B,UACE,oBAAIV,UAAWC,IAAMO,MAArB,SAA6BA,IAC5BC,MAIPF,EAAQI,aAAe,CACrBH,MAAO,IAMMD,Q,gBCfTK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKb,UAAWC,IAAMY,QAAtB,SAAgCA,KAEzCD,EAAaD,aAAe,CAC1BE,QAAS,IAMID,QCwCAE,E,4MA/CbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAc,SAAAY,GACZ,IAAMC,EAAQD,EAAME,OAAOC,YAC3B,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAW,GAEjB,OADAA,EAASL,GAASI,EAAUJ,GAAS,EAC9BK,M,EAIXC,mBAAqB,WACnB,OAAO,EAAKR,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAG3D2B,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,IAAM,EAAKH,qBAAwB,EAAKR,MAAMpB,O,uDAGhE,OACE,qCACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBJ,YAAauB,KAAKvB,gBAGrC,cAAC,EAAD,CAASI,MAAM,aAAf,SACImB,KAAKJ,qBAGL,cAAC,EAAD,CACE5B,KAAMgC,KAAKZ,MAAMpB,KACjBC,QAAS+B,KAAKZ,MAAMnB,QACpBC,IAAK8B,KAAKZ,MAAMlB,IAChBC,MAAO6B,KAAKJ,qBACZxB,mBAAoB4B,KAAKH,oCAP3B,cAAC,EAAD,CAAcX,QAAQ,+B,GAhChBe,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,UAAY,gC,kBCA9BD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.a800fd78.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={style.block_btn}>\n      <div>\n        Good:\n        <span>{good}</span>\n      </div>\n      <div>\n        Neutral:\n        <span>{neutral}</span>\n      </div>\n      <div>\n        Bad:\n        <span>{bad}</span>\n      </div>\n      <div>\n        Total: <span>{total}</span>\n      </div>\n\n      {!!total && (\n        <div>\n          Positive feedback:\n          <span>{positivePercentage} %</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport style from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\nconst FeedbackOptions = ({ addFeedback }) => {\n  return (\n    <>\n      <button className={style.btn} onClick={addFeedback}>\n        good\n      </button>\n      <button className={style.btn} onClick={addFeedback}>\n        neutral\n      </button>\n      <button className={style.btn} onClick={addFeedback}>\n        bad\n      </button>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  addFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport style from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={style.section}>\n      <h1 className={style.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport style from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <div className={style.message}>{message}</div>;\n};\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = event => {\n    const click = event.target.textContent;\n    this.setState(prevState => {\n      const newState = {};\n      newState[click] = prevState[click] + 1;\n      return newState;\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((100 / this.countTotalFeedback()) * this.state.good);\n  };\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions addFeedback={this.addFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1wzKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ivY5\",\"title\":\"Section_title__2T7UT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block_btn\":\"Statistics_block_btn__1EmwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3H76K\"};"],"sourceRoot":""}